:ruby
  if show_action == :authorize_each
    show_action = (EffectiveDatatables.authorized?(controller, :show, resource) rescue false)
  elsif show_action.respond_to?(:call)
    show_action = instance_exec(resource, &show_action)
  end

  if edit_action == :authorize_each
    edit_action = (EffectiveDatatables.authorized?(controller, :edit, resource) rescue false)
  elsif edit_action.respond_to?(:call)
    edit_action = instance_exec(resource, &edit_action)
  end

  if destroy_action == :authorize_each
    destroy_action = (EffectiveDatatables.authorized?(controller, :destroy, resource) rescue false)
  elsif destroy_action.respond_to?(:call)
    destroy_action = instance_exec(resource, &destroy_action)
  end

  if unarchive_action == :authorize_each
    unarchive_action = (EffectiveDatatables.authorized?(controller, :unarchive, resource) rescue false)
  elsif unarchive_action.respond_to?(:call)
    unarchive_action = instance_exec(resource, &unarchive_action)
  end

- if show_action
  - url = (polymorphic_path([*controller_namespace, resource]) rescue nil) || (polymorphic_path(resource) rescue nil)
  - if url.present?
    %a{href: url, title: 'Show'}
      %span.glyphicon.glyphicon-eye-open

- if edit_action
  - url = (edit_polymorphic_path([*controller_namespace, resource]) rescue nil) || (edit_polymorphic_path(resource) rescue nil)
  - if url.present?
    %a{href: url, title: 'Edit'}
      %span.glyphicon.glyphicon-edit

- if destroy_action
  - url = (polymorphic_path([*controller_namespace, resource]) rescue nil) || (polymorphic_path(resource) rescue nil)
  - if url.present?
    - if resource.respond_to?(:archived?) && !resource.archived?
      %a{href: url, title: 'Archive', data: {method: :delete, confirm: "Are you sure you want to archive this item?"}}
        %span.glyphicon.glyphicon-trash
    - elsif resource.respond_to?(:archived?) == false
      %a{href: url, title: 'Delete', data: {method: :delete, confirm: "Are you sure you want to delete this item?"}}
        %span.glyphicon.glyphicon-trash

- if unarchive_action && resource.respond_to?(:archived?) && resource.archived?
  - url = (polymorphic_path([*controller_namespace, resource], action: :unarchive) rescue nil) || (polymorphic_path(resource, action: :unarchive) rescue nil)
  - if url.present?
    %a{href: url, title: 'Unarchive', data: {confirm: 'Are you sure you want to unarchive this item?'}}
      %span.glyphicon.glyphicon-retweet
